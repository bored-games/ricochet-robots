defmodule Gameboy.Homeworlds.GameLogic do
  @moduledoc """
  This module contains functions that handle game logic.
  """

  require Logger
  alias Gameboy.Homeworlds.{Main}

  @allCanoes [ [ [], [{{0, 1}, {1, 0}, {2, 0}, {3, 1}}, {{1, 0}, {0, 1}, {0, 2}, {1, 3}}, {{1, 0}, {2, 1}, {2, 2}, {1, 3}}], [{{0, 1}, {1, 0}, {2, 0}, {3, 1}}, {{2, 0}, {1, 1}, {1, 2}, {2, 3}}, {{2, 0}, {3, 1}, {3, 2}, {2, 3}}], [], [], [], [], [], [], [], [{{9, 1}, {10, 0}, {11, 0}, {12, 1}}, {{10, 0}, {9, 1}, {9, 2}, {10, 3}}, {{10, 0}, {11, 1}, {11, 2}, {10, 3}}], [{{9, 1}, {10, 0}, {11, 0}, {12, 1}}, {{11, 0}, {10, 1}, {10, 2}, {11, 3}}, {{11, 0}, {12, 1}, {12, 2}, {11, 3}}], []], [ [{{0, 1}, {1, 2}, {2, 2}, {3, 1}}, {{0, 1}, {1, 0}, {2, 0}, {3, 1}}, {{1, 0}, {0, 1}, {0, 2}, {1, 3}}], [{{1, 1}, {2, 2}, {3, 2}, {4, 1}}, {{0, 2}, {1, 1}, {2, 1}, {3, 2}}, {{2, 0}, {1, 1}, {1, 2}, {2, 3}}, {{1, 1}, {0, 2}, {0, 3}, {1, 4}}, {{1, 1}, {2, 2}, {2, 3}, {1, 4}}], [{{2, 1}, {3, 2}, {4, 2}, {5, 1}}, {{0, 2}, {1, 1}, {2, 1}, {3, 2}}, {{1, 2}, {2, 1}, {3, 1}, {4, 2}}, {{2, 1}, {1, 2}, {1, 3}, {2, 4}}, {{1, 0}, {2, 1}, {2, 2}, {1, 3}}, {{2, 1}, {3, 2}, {3, 3}, {2, 4}}], [{{3, 1}, {4, 2}, {5, 2}, {6, 1}}, {{0, 1}, {1, 2}, {2, 2}, {3, 1}}, {{0, 1}, {1, 0}, {2, 0}, {3, 1}}, {{1, 2}, {2, 1}, {3, 1}, {4, 2}}, {{2, 2}, {3, 1}, {4, 1}, {5, 2}}, {{3, 1}, {2, 2}, {2, 3}, {3, 4}}, {{2, 0}, {3, 1}, {3, 2}, {2, 3}}, {{3, 1}, {4, 2}, {4, 3}, {3, 4}}], [{{4, 1}, {5, 2}, {6, 2}, {7, 1}}, {{1, 1}, {2, 2}, {3, 2}, {4, 1}}, {{2, 2}, {3, 1}, {4, 1}, {5, 2}}, {{3, 2}, {4, 1}, {5, 1}, {6, 2}}, {{4, 1}, {3, 2}, {3, 3}, {4, 4}}, {{4, 1}, {5, 2}, {5, 3}, {4, 4}}], [{{5, 1}, {6, 2}, {7, 2}, {8, 1}}, {{2, 1}, {3, 2}, {4, 2}, {5, 1}}, {{3, 2}, {4, 1}, {5, 1}, {6, 2}}, {{4, 2}, {5, 1}, {6, 1}, {7, 2}}, {{5, 1}, {4, 2}, {4, 3}, {5, 4}}, {{5, 1}, {6, 2}, {6, 3}, {5, 4}}], [{{6, 1}, {7, 2}, {8, 2}, {9, 1}}, {{3, 1}, {4, 2}, {5, 2}, {6, 1}}, {{4, 2}, {5, 1}, {6, 1}, {7, 2}}, {{5, 2}, {6, 1}, {7, 1}, {8, 2}}, {{6, 1}, {5, 2}, {5, 3}, {6, 4}}, {{6, 1}, {7, 2}, {7, 3}, {6, 4}}], [{{7, 1}, {8, 2}, {9, 2}, {10, 1}}, {{4, 1}, {5, 2}, {6, 2}, {7, 1}}, {{5, 2}, {6, 1}, {7, 1}, {8, 2}}, {{6, 2}, {7, 1}, {8, 1}, {9, 2}}, {{7, 1}, {6, 2}, {6, 3}, {7, 4}}, {{7, 1}, {8, 2}, {8, 3}, {7, 4}}], [{{8, 1}, {9, 2}, {10, 2}, {11, 1}}, {{5, 1}, {6, 2}, {7, 2}, {8, 1}}, {{6, 2}, {7, 1}, {8, 1}, {9, 2}}, {{7, 2}, {8, 1}, {9, 1}, {10, 2}}, {{8, 1}, {7, 2}, {7, 3}, {8, 4}}, {{8, 1}, {9, 2}, {9, 3}, {8, 4}}], [{{9, 1}, {10, 2}, {11, 2}, {12, 1}}, {{6, 1}, {7, 2}, {8, 2}, {9, 1}}, {{7, 2}, {8, 1}, {9, 1}, {10, 2}}, {{8, 2}, {9, 1}, {10, 1}, {11, 2}}, {{9, 1}, {10, 0}, {11, 0}, {12, 1}}, {{10, 0}, {9, 1}, {9, 2}, {10, 3}}, {{9, 1}, {8, 2}, {8, 3}, {9, 4}}, {{9, 1}, {10, 2}, {10, 3}, {9, 4}}], [{{7, 1}, {8, 2}, {9, 2}, {10, 1}}, {{8, 2}, {9, 1}, {10, 1}, {11, 2}}, {{9, 2}, {10, 1}, {11, 1}, {12, 2}}, {{11, 0}, {10, 1}, {10, 2}, {11, 3}}, {{10, 1}, {9, 2}, {9, 3}, {10, 4}}, {{10, 1}, {11, 2}, {11, 3}, {10, 4}}], [{{8, 1}, {9, 2}, {10, 2}, {11, 1}}, {{9, 2}, {10, 1}, {11, 1}, {12, 2}}, {{11, 1}, {10, 2}, {10, 3}, {11, 4}}, {{10, 0}, {11, 1}, {11, 2}, {10, 3}}, {{11, 1}, {12, 2}, {12, 3}, {11, 4}}], [{{9, 1}, {10, 2}, {11, 2}, {12, 1}}, {{9, 1}, {10, 0}, {11, 0}, {12, 1}}, {{11, 0}, {12, 1}, {12, 2}, {11, 3}}] ], [ [{{0, 2}, {1, 3}, {2, 3}, {3, 2}}, {{0, 2}, {1, 1}, {2, 1}, {3, 2}}, {{1, 0}, {0, 1}, {0, 2}, {1, 3}}, {{1, 1}, {0, 2}, {0, 3}, {1, 4}}], [{{1, 2}, {2, 3}, {3, 3}, {4, 2}}, {{0, 1}, {1, 2}, {2, 2}, {4, 1}}, {{0, 3}, {1, 2}, {2, 2}, {3, 3}}, {{1, 2}, {2, 1}, {3, 1}, {4, 2}}, {{2, 0}, {1, 1}, {1, 2}, {2, 3}}, {{2, 1}, {1, 2}, {1, 3}, {2, 4}}], [{{2, 2}, {3, 3}, {4, 3}, {5, 2}}, {{1, 1}, {2, 2}, {3, 2}, {5, 1}}, {{0, 1}, {1, 2}, {2, 2}, {3, 1}}, {{0, 3}, {1, 2}, {2, 2}, {3, 3}}, {{1, 3}, {2, 2}, {3, 2}, {4, 3}}, {{2, 2}, {3, 1}, {4, 1}, {5, 2}}, {{3, 1}, {2, 2}, {2, 3}, {3, 4}}, {{1, 0}, {2, 1}, {2, 2}, {1, 3}}, {{1, 1}, {2, 2}, {2, 3}, {1, 4}}], [{{3, 2}, {4, 3}, {5, 3}, {6, 2}}, {{0, 2}, {1, 3}, {2, 3}, {3, 2}}, {{2, 1}, {3, 2}, {4, 2}, {6, 1}}, {{1, 1}, {2, 2}, {3, 2}, {4, 1}}, {{0, 2}, {1, 1}, {2, 1}, {3, 2}}, {{1, 3}, {2, 2}, {3, 2}, {4, 3}}, {{2, 3}, {3, 2}, {4, 2}, {5, 3}}, {{3, 2}, {4, 1}, {5, 1}, {6, 2}}, {{4, 1}, {3, 2}, {3, 3}, {4, 4}}, {{3, 2}, {2, 3}, {2, 4}, {3, 5}}, {{2, 0}, {3, 1}, {3, 2}, {2, 3}}, {{2, 1}, {3, 2}, {3, 3}, {2, 4}}, {{3, 2}, {4, 3}, {4, 4}, {3, 5}}], [{{4, 2}, {5, 3}, {6, 3}, {7, 2}}, {{1, 2}, {2, 3}, {3, 3}, {4, 2}}, {{3, 1}, {4, 2}, {5, 2}, {7, 1}}, {{2, 1}, {3, 2}, {4, 2}, {5, 1}}, {{1, 2}, {2, 1}, {3, 1}, {4, 2}}, {{2, 3}, {3, 2}, {4, 2}, {5, 3}}, {{3, 3}, {4, 2}, {5, 2}, {6, 3}}, {{4, 2}, {5, 1}, {6, 1}, {7, 2}}, {{5, 1}, {4, 2}, {4, 3}, {5, 4}}, {{4, 2}, {3, 3}, {3, 4}, {4, 5}}, {{3, 1}, {4, 2}, {4, 3}, {3, 4}}, {{4, 2}, {5, 3}, {5, 4}, {4, 5}}], [{{5, 2}, {6, 3}, {7, 3}, {8, 2}}, {{2, 2}, {3, 3}, {4, 3}, {5, 2}}, {{4, 1}, {5, 2}, {6, 2}, {8, 1}}, {{3, 1}, {4, 2}, {5, 2}, {6, 1}}, {{2, 2}, {3, 1}, {4, 1}, {5, 2}}, {{3, 3}, {4, 2}, {5, 2}, {6, 3}}, {{4, 3}, {5, 2}, {6, 2}, {7, 3}}, {{5, 2}, {6, 1}, {7, 1}, {8, 2}}, {{6, 1}, {5, 2}, {5, 3}, {6, 4}}, {{5, 2}, {4, 3}, {4, 4}, {5, 5}}, {{4, 1}, {5, 2}, {5, 3}, {4, 4}}, {{5, 2}, {6, 3}, {6, 4}, {5, 5}}], [{{6, 2}, {7, 3}, {8, 3}, {9, 2}}, {{3, 2}, {4, 3}, {5, 3}, {6, 2}}, {{5, 1}, {6, 2}, {7, 2}, {9, 1}}, {{4, 1}, {5, 2}, {6, 2}, {7, 1}}, {{3, 2}, {4, 1}, {5, 1}, {6, 2}}, {{4, 3}, {5, 2}, {6, 2}, {7, 3}}, {{5, 3}, {6, 2}, {7, 2}, {8, 3}}, {{6, 2}, {7, 1}, {8, 1}, {9, 2}}, {{7, 1}, {6, 2}, {6, 3}, {7, 4}}, {{6, 2}, {5, 3}, {5, 4}, {6, 5}}, {{5, 1}, {6, 2}, {6, 3}, {5, 4}}, {{6, 2}, {7, 3}, {7, 4}, {6, 5}}], [{{7, 2}, {8, 3}, {9, 3}, {10, 2}}, {{4, 2}, {5, 3}, {6, 3}, {7, 2}}, {{6, 1}, {7, 2}, {8, 2}, {10, 1}}, {{5, 1}, {6, 2}, {7, 2}, {8, 1}}, {{4, 2}, {5, 1}, {6, 1}, {7, 2}}, {{5, 3}, {6, 2}, {7, 2}, {8, 3}}, {{6, 3}, {7, 2}, {8, 2}, {9, 3}}, {{7, 2}, {8, 1}, {9, 1}, {10, 2}}, {{8, 1}, {7, 2}, {7, 3}, {8, 4}}, {{7, 2}, {6, 3}, {6, 4}, {7, 5}}, {{6, 1}, {7, 2}, {7, 3}, {6, 4}}, {{7, 2}, {8, 3}, {8, 4}, {7, 5}}], [{{8, 2}, {9, 3}, {10, 3}, {11, 2}}, {{5, 2}, {6, 3}, {7, 3}, {8, 2}}, {{7, 1}, {8, 2}, {9, 2}, {11, 1}}, {{6, 1}, {7, 2}, {8, 2}, {9, 1}}, {{5, 2}, {6, 1}, {7, 1}, {8, 2}}, {{6, 3}, {7, 2}, {8, 2}, {9, 3}}, {{7, 3}, {8, 2}, {9, 2}, {10, 3}}, {{8, 2}, {9, 1}, {10, 1}, {11, 2}}, {{9, 1}, {8, 2}, {8, 3}, {9, 4}}, {{8, 2}, {7, 3}, {7, 4}, {8, 5}}, {{7, 1}, {8, 2}, {8, 3}, {7, 4}}, {{8, 2}, {9, 3}, {9, 4}, {8, 5}}], [{{9, 2}, {10, 3}, {11, 3}, {12, 2}}, {{6, 2}, {7, 3}, {8, 3}, {9, 2}}, {{8, 1}, {9, 2}, {10, 2}, {12, 1}}, {{7, 1}, {8, 2}, {9, 2}, {10, 1}}, {{6, 2}, {7, 1}, {8, 1}, {9, 2}}, {{7, 3}, {8, 2}, {9, 2}, {10, 3}}, {{8, 3}, {9, 2}, {10, 2}, {11, 3}}, {{9, 2}, {10, 1}, {11, 1}, {12, 2}}, {{10, 0}, {9, 1}, {9, 2}, {10, 3}}, {{10, 1}, {9, 2}, {9, 3}, {10, 4}}, {{9, 2}, {8, 3}, {8, 4}, {9, 5}}, {{8, 1}, {9, 2}, {9, 3}, {8, 4}}, {{9, 2}, {10, 3}, {10, 4}, {9, 5}}], [{{7, 2}, {8, 3}, {9, 3}, {10, 2}}, {{8, 1}, {9, 2}, {10, 2}, {11, 1}}, {{7, 2}, {8, 1}, {9, 1}, {10, 2}}, {{8, 3}, {9, 2}, {10, 2}, {11, 3}}, {{9, 3}, {10, 2}, {11, 2}, {12, 3}}, {{11, 0}, {10, 1}, {10, 2}, {11, 3}}, {{11, 1}, {10, 2}, {10, 3}, {11, 4}}, {{9, 1}, {10, 2}, {10, 3}, {9, 4}}], [{{8, 2}, {9, 3}, {10, 3}, {11, 2}}, {{9, 1}, {10, 2}, {11, 2}, {12, 1}}, {{8, 2}, {9, 1}, {10, 1}, {11, 2}}, {{9, 3}, {10, 2}, {11, 2}, {12, 3}}, {{10, 0}, {11, 1}, {11, 2}, {10, 3}}, {{10, 1}, {11, 2}, {11, 3}, {10, 4}}], [{{9, 2}, {10, 3}, {11, 3}, {12, 2}}, {{9, 2}, {10, 1}, {11, 1}, {12, 2}}, {{11, 0}, {12, 1}, {12, 2}, {11, 3}}, {{11, 1}, {12, 2}, {12, 3}, {11, 4}}] ], [ [{{0, 3}, {1, 4}, {2, 4}, {3, 3}}, {{0, 3}, {1, 2}, {2, 2}, {3, 3}}, {{1, 1}, {0, 2}, {0, 3}, {1, 4}}], [{{1, 3}, {2, 4}, {3, 4}, {4, 3}}, {{0, 2}, {1, 3}, {2, 3}, {4, 2}}, {{1, 3}, {2, 2}, {3, 2}, {4, 3}}, {{1, 0}, {0, 1}, {0, 2}, {1, 3}}, {{2, 1}, {1, 2}, {1, 3}, {2, 4}}, {{1, 0}, {2, 1}, {2, 2}, {1, 3}}], [{{2, 3}, {3, 4}, {4, 4}, {5, 3}}, {{1, 2}, {2, 3}, {3, 3}, {5, 2}}, {{0, 2}, {1, 3}, {2, 3}, {3, 2}}, {{1, 4}, {2, 3}, {3, 3}, {4, 4}}, {{2, 3}, {3, 2}, {4, 2}, {5, 3}}, {{2, 0}, {1, 1}, {1, 2}, {2, 3}}, {{3, 1}, {2, 2}, {2, 3}, {3, 4}}, {{3, 2}, {2, 3}, {2, 4}, {3, 5}}, {{2, 0}, {3, 1}, {3, 2}, {2, 3}}, {{1, 1}, {2, 2}, {2, 3}, {1, 4}}], [{{3, 3}, {4, 4}, {5, 4}, {6, 3}}, {{0, 3}, {1, 4}, {2, 4}, {3, 3}}, {{2, 2}, {3, 3}, {4, 3}, {6, 2}}, {{1, 2}, {2, 3}, {3, 3}, {4, 2}}, {{0, 3}, {1, 2}, {2, 2}, {3, 3}}, {{1, 4}, {2, 3}, {3, 3}, {4, 4}}, {{2, 4}, {3, 3}, {4, 3}, {5, 4}}, {{3, 3}, {4, 2}, {5, 2}, {6, 3}}, {{4, 1}, {3, 2}, {3, 3}, {4, 4}}, {{4, 2}, {3, 3}, {3, 4}, {4, 5}}, {{2, 1}, {3, 2}, {3, 3}, {2, 4}}], [{{4, 3}, {5, 4}, {6, 4}, {7, 3}}, {{1, 3}, {2, 4}, {3, 4}, {4, 3}}, {{3, 2}, {4, 3}, {5, 3}, {7, 2}}, {{2, 2}, {3, 3}, {4, 3}, {5, 2}}, {{1, 3}, {2, 2}, {3, 2}, {4, 3}}, {{2, 4}, {3, 3}, {4, 3}, {5, 4}}, {{3, 4}, {4, 3}, {5, 3}, {6, 4}}, {{4, 3}, {5, 2}, {6, 2}, {7, 3}}, {{5, 1}, {4, 2}, {4, 3}, {5, 4}}, {{5, 2}, {4, 3}, {4, 4}, {5, 5}}, {{3, 1}, {4, 2}, {4, 3}, {3, 4}}, {{3, 2}, {4, 3}, {4, 4}, {3, 5}}], [{{5, 3}, {6, 4}, {7, 4}, {8, 3}}, {{2, 3}, {3, 4}, {4, 4}, {5, 3}}, {{4, 2}, {5, 3}, {6, 3}, {8, 2}}, {{3, 2}, {4, 3}, {5, 3}, {6, 2}}, {{2, 3}, {3, 2}, {4, 2}, {5, 3}}, {{3, 4}, {4, 3}, {5, 3}, {6, 4}}, {{4, 4}, {5, 3}, {6, 3}, {7, 4}}, {{5, 3}, {6, 2}, {7, 2}, {8, 3}}, {{6, 1}, {5, 2}, {5, 3}, {6, 4}}, {{6, 2}, {5, 3}, {5, 4}, {6, 5}}, {{4, 1}, {5, 2}, {5, 3}, {4, 4}}, {{4, 2}, {5, 3}, {5, 4}, {4, 5}}], [{{6, 3}, {7, 4}, {8, 4}, {9, 3}}, {{3, 3}, {4, 4}, {5, 4}, {6, 3}}, {{5, 2}, {6, 3}, {7, 3}, {9, 2}}, {{4, 2}, {5, 3}, {6, 3}, {7, 2}}, {{3, 3}, {4, 2}, {5, 2}, {6, 3}}, {{4, 4}, {5, 3}, {6, 3}, {7, 4}}, {{5, 4}, {6, 3}, {7, 3}, {8, 4}}, {{6, 3}, {7, 2}, {8, 2}, {9, 3}}, {{7, 1}, {6, 2}, {6, 3}, {7, 4}}, {{7, 2}, {6, 3}, {6, 4}, {7, 5}}, {{5, 1}, {6, 2}, {6, 3}, {5, 4}}, {{5, 2}, {6, 3}, {6, 4}, {5, 5}}], [{{7, 3}, {8, 4}, {9, 4}, {10, 3}}, {{4, 3}, {5, 4}, {6, 4}, {7, 3}}, {{6, 2}, {7, 3}, {8, 3}, {10, 2}}, {{5, 2}, {6, 3}, {7, 3}, {8, 2}}, {{4, 3}, {5, 2}, {6, 2}, {7, 3}}, {{5, 4}, {6, 3}, {7, 3}, {8, 4}}, {{6, 4}, {7, 3}, {8, 3}, {9, 4}}, {{7, 3}, {8, 2}, {9, 2}, {10, 3}}, {{8, 1}, {7, 2}, {7, 3}, {8, 4}}, {{8, 2}, {7, 3}, {7, 4}, {8, 5}}, {{6, 1}, {7, 2}, {7, 3}, {6, 4}}, {{6, 2}, {7, 3}, {7, 4}, {6, 5}}], [{{8, 3}, {9, 4}, {10, 4}, {11, 3}}, {{5, 3}, {6, 4}, {7, 4}, {8, 3}}, {{7, 2}, {8, 3}, {9, 3}, {11, 2}}, {{6, 2}, {7, 3}, {8, 3}, {9, 2}}, {{5, 3}, {6, 2}, {7, 2}, {8, 3}}, {{6, 4}, {7, 3}, {8, 3}, {9, 4}}, {{7, 4}, {8, 3}, {9, 3}, {10, 4}}, {{8, 3}, {9, 2}, {10, 2}, {11, 3}}, {{9, 1}, {8, 2}, {8, 3}, {9, 4}}, {{9, 2}, {8, 3}, {8, 4}, {9, 5}}, {{7, 1}, {8, 2}, {8, 3}, {7, 4}}, {{7, 2}, {8, 3}, {8, 4}, {7, 5}}], [{{9, 3}, {10, 4}, {11, 4}, {12, 3}}, {{6, 3}, {7, 4}, {8, 4}, {9, 3}}, {{8, 2}, {9, 3}, {10, 3}, {12, 2}}, {{7, 2}, {8, 3}, {9, 3}, {10, 2}}, {{6, 3}, {7, 2}, {8, 2}, {9, 3}}, {{7, 4}, {8, 3}, {9, 3}, {10, 4}}, {{8, 4}, {9, 3}, {10, 3}, {11, 4}}, {{9, 3}, {10, 2}, {11, 2}, {12, 3}}, {{10, 1}, {9, 2}, {9, 3}, {10, 4}}, {{8, 1}, {9, 2}, {9, 3}, {8, 4}}, {{8, 2}, {9, 3}, {9, 4}, {8, 5}}], [{{7, 3}, {8, 4}, {9, 4}, {10, 3}}, {{8, 2}, {9, 3}, {10, 3}, {11, 2}}, {{7, 3}, {8, 2}, {9, 2}, {10, 3}}, {{8, 4}, {9, 3}, {10, 3}, {11, 4}}, {{10, 0}, {9, 1}, {9, 2}, {10, 3}}, {{11, 1}, {10, 2}, {10, 3}, {11, 4}}, {{10, 0}, {11, 1}, {11, 2}, {10, 3}}, {{9, 1}, {10, 2}, {10, 3}, {9, 4}}, {{9, 2}, {10, 3}, {10, 4}, {9, 5}}], [{{8, 3}, {9, 4}, {10, 4}, {11, 3}}, {{9, 2}, {10, 3}, {11, 3}, {12, 2}}, {{8, 3}, {9, 2}, {10, 2}, {11, 3}}, {{11, 0}, {10, 1}, {10, 2}, {11, 3}}, {{11, 0}, {12, 1}, {12, 2}, {11, 3}}, {{10, 1}, {11, 2}, {11, 3}, {10, 4}}], [{{9, 3}, {10, 4}, {11, 4}, {12, 3}}, {{9, 3}, {10, 2}, {11, 2}, {12, 3}}, {{11, 1}, {12, 2}, {12, 3}, {11, 4}}] ], [ [], [{{0, 3}, {1, 4}, {2, 4}, {4, 3}}, {{1, 4}, {2, 3}, {3, 3}, {4, 4}}, {{1, 1}, {0, 2}, {0, 3}, {1, 4}}, {{1, 1}, {2, 2}, {2, 3}, {1, 4}}], [{{2, 4}, {3, 5}, {4, 5}, {5, 4}}, {{1, 3}, {2, 4}, {3, 4}, {5, 3}}, {{0, 3}, {1, 4}, {2, 4}, {3, 3}}, {{2, 4}, {3, 3}, {4, 3}, {5, 4}}, {{2, 1}, {1, 2}, {1, 3}, {2, 4}}, {{3, 2}, {2, 3}, {2, 4}, {3, 5}}, {{2, 1}, {3, 2}, {3, 3}, {2, 4}}], [{{3, 4}, {4, 5}, {5, 5}, {6, 4}}, {{2, 3}, {3, 4}, {4, 4}, {6, 3}}, {{1, 3}, {2, 4}, {3, 4}, {4, 3}}, {{3, 4}, {4, 3}, {5, 3}, {6, 4}}, {{3, 1}, {2, 2}, {2, 3}, {3, 4}}, {{4, 2}, {3, 3}, {3, 4}, {4, 5}}, {{3, 1}, {4, 2}, {4, 3}, {3, 4}}], [{{4, 4}, {5, 5}, {6, 5}, {7, 4}}, {{3, 3}, {4, 4}, {5, 4}, {7, 3}}, {{2, 3}, {3, 4}, {4, 4}, {5, 3}}, {{1, 4}, {2, 3}, {3, 3}, {4, 4}}, {{3, 5}, {4, 4}, {5, 4}, {6, 5}}, {{4, 4}, {5, 3}, {6, 3}, {7, 4}}, {{4, 1}, {3, 2}, {3, 3}, {4, 4}}, {{5, 2}, {4, 3}, {4, 4}, {5, 5}}, {{4, 1}, {5, 2}, {5, 3}, {4, 4}}, {{3, 2}, {4, 3}, {4, 4}, {3, 5}}], [{{5, 4}, {6, 5}, {7, 5}, {8, 4}}, {{2, 4}, {3, 5}, {4, 5}, {5, 4}}, {{4, 3}, {5, 4}, {6, 4}, {8, 3}}, {{3, 3}, {4, 4}, {5, 4}, {6, 3}}, {{2, 4}, {3, 3}, {4, 3}, {5, 4}}, {{3, 5}, {4, 4}, {5, 4}, {6, 5}}, {{4, 5}, {5, 4}, {6, 4}, {7, 5}}, {{5, 4}, {6, 3}, {7, 3}, {8, 4}}, {{5, 1}, {4, 2}, {4, 3}, {5, 4}}, {{6, 2}, {5, 3}, {5, 4}, {6, 5}}, {{5, 1}, {6, 2}, {6, 3}, {5, 4}}, {{4, 2}, {5, 3}, {5, 4}, {4, 5}}], [{{6, 4}, {7, 5}, {8, 5}, {9, 4}}, {{3, 4}, {4, 5}, {5, 5}, {6, 4}}, {{5, 3}, {6, 4}, {7, 4}, {9, 3}}, {{4, 3}, {5, 4}, {6, 4}, {7, 3}}, {{3, 4}, {4, 3}, {5, 3}, {6, 4}}, {{4, 5}, {5, 4}, {6, 4}, {7, 5}}, {{5, 5}, {6, 4}, {7, 4}, {8, 5}}, {{6, 4}, {7, 3}, {8, 3}, {9, 4}}, {{6, 1}, {5, 2}, {5, 3}, {6, 4}}, {{7, 2}, {6, 3}, {6, 4}, {7, 5}}, {{6, 1}, {7, 2}, {7, 3}, {6, 4}}, {{5, 2}, {6, 3}, {6, 4}, {5, 5}}], [{{7, 4}, {8, 5}, {9, 5}, {10, 4}}, {{4, 4}, {5, 5}, {6, 5}, {7, 4}}, {{6, 3}, {7, 4}, {8, 4}, {10, 3}}, {{5, 3}, {6, 4}, {7, 4}, {8, 3}}, {{4, 4}, {5, 3}, {6, 3}, {7, 4}}, {{5, 5}, {6, 4}, {7, 4}, {8, 5}}, {{6, 5}, {7, 4}, {8, 4}, {9, 5}}, {{7, 4}, {8, 3}, {9, 3}, {10, 4}}, {{7, 1}, {6, 2}, {6, 3}, {7, 4}}, {{8, 2}, {7, 3}, {7, 4}, {8, 5}}, {{7, 1}, {8, 2}, {8, 3}, {7, 4}}, {{6, 2}, {7, 3}, {7, 4}, {6, 5}}], [{{5, 4}, {6, 5}, {7, 5}, {8, 4}}, {{7, 3}, {8, 4}, {9, 4}, {11, 3}}, {{6, 3}, {7, 4}, {8, 4}, {9, 3}}, {{5, 4}, {6, 3}, {7, 3}, {8, 4}}, {{6, 5}, {7, 4}, {8, 4}, {9, 5}}, {{8, 4}, {9, 3}, {10, 3}, {11, 4}}, {{8, 1}, {7, 2}, {7, 3}, {8, 4}}, {{9, 2}, {8, 3}, {8, 4}, {9, 5}}, {{8, 1}, {9, 2}, {9, 3}, {8, 4}}, {{7, 2}, {8, 3}, {8, 4}, {7, 5}}], [{{6, 4}, {7, 5}, {8, 5}, {9, 4}}, {{8, 3}, {9, 4}, {10, 4}, {12, 3}}, {{7, 3}, {8, 4}, {9, 4}, {10, 3}}, {{6, 4}, {7, 3}, {8, 3}, {9, 4}}, {{9, 1}, {8, 2}, {8, 3}, {9, 4}}, {{9, 1}, {10, 2}, {10, 3}, {9, 4}}, {{8, 2}, {9, 3}, {9, 4}, {8, 5}}], [{{7, 4}, {8, 5}, {9, 5}, {10, 4}}, {{8, 3}, {9, 4}, {10, 4}, {11, 3}}, {{7, 4}, {8, 3}, {9, 3}, {10, 4}}, {{10, 1}, {9, 2}, {9, 3}, {10, 4}}, {{10, 1}, {11, 2}, {11, 3}, {10, 4}}, {{9, 2}, {10, 3}, {10, 4}, {9, 5}}], [{{9, 3}, {10, 4}, {11, 4}, {12, 3}}, {{8, 4}, {9, 3}, {10, 3}, {11, 4}}, {{11, 1}, {10, 2}, {10, 3}, {11, 4}}, {{11, 1}, {12, 2}, {12, 3}, {11, 4}}], [] ], [ [], [], [], [{{2, 4}, {3, 5}, {4, 5}, {6, 4}}, {{3, 5}, {4, 4}, {5, 4}, {6, 5}}, {{3, 2}, {2, 3}, {2, 4}, {3, 5}}, {{3, 2}, {4, 3}, {4, 4}, {3, 5}}], [{{3, 4}, {4, 5}, {5, 5}, {7, 4}}, {{2, 4}, {3, 5}, {4, 5}, {5, 4}}, {{4, 5}, {5, 4}, {6, 4}, {7, 5}}, {{4, 2}, {3, 3}, {3, 4}, {4, 5}}, {{4, 2}, {5, 3}, {5, 4}, {4, 5}}], [{{4, 4}, {5, 5}, {6, 5}, {8, 4}}, {{3, 4}, {4, 5}, {5, 5}, {6, 4}}, {{5, 5}, {6, 4}, {7, 4}, {8, 5}}, {{5, 2}, {4, 3}, {4, 4}, {5, 5}}, {{5, 2}, {6, 3}, {6, 4}, {5, 5}}], [{{5, 4}, {6, 5}, {7, 5}, {9, 4}}, {{4, 4}, {5, 5}, {6, 5}, {7, 4}}, {{3, 5}, {4, 4}, {5, 4}, {6, 5}}, {{6, 5}, {7, 4}, {8, 4}, {9, 5}}, {{6, 2}, {5, 3}, {5, 4}, {6, 5}}, {{6, 2}, {7, 3}, {7, 4}, {6, 5}}], [{{6, 4}, {7, 5}, {8, 5}, {10, 4}}, {{5, 4}, {6, 5}, {7, 5}, {8, 4}}, {{4, 5}, {5, 4}, {6, 4}, {7, 5}}, {{7, 2}, {6, 3}, {6, 4}, {7, 5}}, {{7, 2}, {8, 3}, {8, 4}, {7, 5}}], [{{7, 4}, {8, 5}, {9, 5}, {11, 4}}, {{6, 4}, {7, 5}, {8, 5}, {9, 4}}, {{5, 5}, {6, 4}, {7, 4}, {8, 5}}, {{8, 2}, {7, 3}, {7, 4}, {8, 5}}, {{8, 2}, {9, 3}, {9, 4}, {8, 5}}], [{{7, 4}, {8, 5}, {9, 5}, {10, 4}}, {{6, 5}, {7, 4}, {8, 4}, {9, 5}}, {{9, 2}, {8, 3}, {8, 4}, {9, 5}}, {{9, 2}, {10, 3}, {10, 4}, {9, 5}}], [], [], [] ]]


    
  def getCanoes(board, row, tx, ty) do
    case board do
      [r|rs] ->
        case getCanoesHelper(r, 0, row, tx, ty) do
          nil -> getCanoes(rs, (row+1), tx, ty)
          c -> c
        end
      _ ->
        [[]]
    end
  end


  def getCanoesHelper(row, ix, iy, tx, ty) do
    case row do
      [c|cs] ->
        if {ix, iy} == {tx, ty} do
          c
        else
          getCanoesHelper(cs, (ix+1), iy, tx, ty)
        end
      _ ->
        nil
    end
  end

  @spec countCanoes([Main.canoe_t()]) :: integer
  def countCanoes(canoes) do
    case canoes do
      [] -> 0
      _ -> 
        any =
          for c <- canoes, into: [] do
            Enum.any?( canoes, fn t ->
              MapSet.size(MapSet.union( MapSet.new( Tuple.to_list(c) ), MapSet.new( Tuple.to_list(t) ) )) == 8 end)
          end
          if Enum.any?(any) do 2 else 1 end
    end
  end

  @doc """
  Simply put a peg in the correct hole
  """
  @spec make_move(map, integer, {integer, integer}) :: :error_not_valid_move | map
  def make_move(board, teamid, {x, y}) do
    case board[y][x] do
      0 ->
        put_in(board[y][x], teamid)
      _ ->
        :error_not_valid_move
    end
  end
  

  @spec get_new_canoes([Main.canoe_t()], map) :: [Main.canoe_t()]
  def get_new_canoes(possibleCanoes, selected) do
    Enum.filter(possibleCanoes, fn c -> MapSet.size(MapSet.intersection( MapSet.new( Tuple.to_list(c) ) , selected)) == 4 end)
  end


  @doc """
  Return the number of canoes for the team that just moved
  """
  @spec check_solution([Main.canoe_t()], map, {integer, integer}) :: {integer, [Main.canoe_t()]}
  def check_solution(completed_canoes, selected, {x, y}) do
    possibleCanoes = getCanoes(@allCanoes, 0, x, y)

    new_canoes = get_new_canoes(possibleCanoes, selected)
    all_canoes = new_canoes ++ completed_canoes
    count_all_canoes = countCanoes(all_canoes)
    count_new_canoes = if new_canoes == [] do 0 else 1 end

    {count_all_canoes, count_new_canoes, all_canoes}
  end
 

  @doc """
  Return a randomized boundary board, its visual map, and corresponding goal positions.
  """
  @spec populate_board() :: map
  def populate_board() do
    sparse = for c <- 0..12, into: %{}, do: {c, -1}
    empty  = for c <- 0..12, into: %{}, do: {c, 0}
    brd = for r <- 1..5, into: %{0 => sparse}, do: {r, empty}

    brd = put_in(brd[0][1], 0)
    brd = put_in(brd[0][2], 0)
    brd = put_in(brd[0][10], 0)
    brd = put_in(brd[0][11], 0)
    brd = put_in(brd[4][0], -1)
    brd = put_in(brd[4][12], -1)
    brd = put_in(brd[5][0], -1)
    brd = put_in(brd[5][1], -1)
    brd = put_in(brd[5][2], -1)
    brd = put_in(brd[5][10], -1)
    brd = put_in(brd[5][11], -1)
    brd = put_in(brd[5][12], -1)
    brd
  end
end

